{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(http) {\n    this.http = http;\n    // This is the cart. It's an array of IProduct objects.\n    this.cart = [];\n  }\n  add(product) {\n    this.cart.push(product);\n    console.log('product ' + product.name + ' added to cart');\n    //      console.log(`product ${product.name} added to cart`);\n    // now post the cart to the server\n    //  this.http.post('api/RobotCatalog', this.cart).subscribe(() =>\n    //  {\n    //    console.log('for product: ' + product.name + ' the response from server is: ' + '');\n    //  })\n    //this.http.post('/api/Cart', this.cart).subscribe((response) => {\n    //  console.log('for product: ' + product.name + ' the response from server is: ' + response);\n    //})\n    // post this to the same server that the catalog is on,\n    // but to a different endpoint: /api/Cart\n    // This is accessed throght he cart service\n    // DJS: just push the individual product to the server, not the whole cart\n    this.http.post('/api/Cart', product).subscribe(() => {\n      console.log('added ' + product.name + ' to cart');\n    });\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["CartService","constructor","http","cart","add","product","push","console","log","name","post","subscribe","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\djs\\dev\\Angular\\AngularFundamentals\\Joes-Robot-Shop-Client-Visualstudio\\joes-robot-shop\\joes-robot-shop\\src\\app\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IProduct } from './catalog/product.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService\r\n{\r\n  // This is the cart. It's an array of IProduct objects.\r\n  cart: IProduct[] = [];\r\n\r\n  \r\n  constructor(private http:HttpClient) { }\r\n  \r\n  add(product: IProduct) {\r\n    this.cart.push(product);\r\n    console.log('product ' + product.name + ' added to cart');\r\n    //      console.log(`product ${product.name} added to cart`);\r\n    // now post the cart to the server\r\n\r\n    //  this.http.post('api/RobotCatalog', this.cart).subscribe(() =>\r\n    //  {\r\n    //    console.log('for product: ' + product.name + ' the response from server is: ' + '');\r\n    //  })\r\n\r\n    //this.http.post('/api/Cart', this.cart).subscribe((response) => {\r\n    //  console.log('for product: ' + product.name + ' the response from server is: ' + response);\r\n    //})\r\n\r\n    // post this to the same server that the catalog is on,\r\n    // but to a different endpoint: /api/Cart\r\n    // This is accessed throght he cart service\r\n\r\n\r\n    // DJS: just push the individual product to the server, not the whole cart\r\n    this.http.post('/api/Cart', product).subscribe(() => {\r\n      console.log('added ' + product.name + ' to cart');\r\n    })\r\n  }\r\n}\r\n\r\n"],"mappings":";;AAIA,MAGaA,WAAW;EAMtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACA,KAAAC,IAAI,GAAe,EAAE;EAGkB;EAEvCC,GAAGA,CAACC,OAAiB;IACnB,IAAI,CAACF,IAAI,CAACG,IAAI,CAACD,OAAO,CAAC;IACvBE,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGH,OAAO,CAACI,IAAI,GAAG,gBAAgB,CAAC;IACzD;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAGA;IACA,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,WAAW,EAAEL,OAAO,CAAC,CAACM,SAAS,CAAC,MAAK;MAClDJ,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGH,OAAO,CAACI,IAAI,GAAG,UAAU,CAAC;IACnD,CAAC,CAAC;EACJ;;AAhCWT,WAAW,C;mBAAXA,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXf,WAAW,C;SAAXA,WAAW;EAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPlB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}