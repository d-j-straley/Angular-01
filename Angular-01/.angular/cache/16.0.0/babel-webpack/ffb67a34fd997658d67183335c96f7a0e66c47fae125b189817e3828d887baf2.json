{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(http) {\n    this.http = http;\n    // This is the cart. It's an array of IProduct objects.\n    this.cart = [];\n  }\n  add(product) {\n    /* DJS: just push the individual product to the server, not the whole cart.\n     * The API on the server is expecting only a singular product, not the whole cart.\n     * Additionally, interestingly, if we do try to push the whole cart, the server will\n     * reject it with a 400 Bad Request error, presumably because the server realizes\n     * the we pushed and array of objects to it, not a singular object.  No problem,\n     * any shopping cart should only add one item at a time, not the whole cart, to the\n     * database.\n     */\n    this.cart.push(product);\n    this.http.post('/api/Cart', product).subscribe(response => {\n      console.log('Added to cart: \"' + product.name + '\" with return code:' + response);\n    });\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["CartService","constructor","http","cart","add","product","push","post","subscribe","response","console","log","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\djs\\dev\\Angular\\AngularFundamentals\\Joes-Robot-Shop-Client-Visualstudio\\joes-robot-shop\\joes-robot-shop\\src\\app\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IProduct } from './catalog/product.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService\r\n{\r\n  // This is the cart. It's an array of IProduct objects.\r\n  cart: IProduct[] = [];\r\n\r\n  \r\n  constructor(private http:HttpClient) { }\r\n  \r\n  add(product: IProduct)\r\n  {\r\n\r\n    /* DJS: just push the individual product to the server, not the whole cart.\r\n     * The API on the server is expecting only a singular product, not the whole cart.\r\n     * Additionally, interestingly, if we do try to push the whole cart, the server will\r\n     * reject it with a 400 Bad Request error, presumably because the server realizes\r\n     * the we pushed and array of objects to it, not a singular object.  No problem,\r\n     * any shopping cart should only add one item at a time, not the whole cart, to the\r\n     * database.\r\n     */\r\n\r\n    this.cart.push(product);\r\n    this.http.post('/api/Cart', product).subscribe((response) => {\r\n      console.log('Added to cart: \"' + product.name + '\" with return code:' + response);\r\n    })\r\n  }\r\n}\r\n\r\n"],"mappings":";;AAIA,MAGaA,WAAW;EAMtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACA,KAAAC,IAAI,GAAe,EAAE;EAGkB;EAEvCC,GAAGA,CAACC,OAAiB;IAGnB;;;;;;;;IASA,IAAI,CAACF,IAAI,CAACG,IAAI,CAACD,OAAO,CAAC;IACvB,IAAI,CAACH,IAAI,CAACK,IAAI,CAAC,WAAW,EAAEF,OAAO,CAAC,CAACG,SAAS,CAAEC,QAAQ,IAAI;MAC1DC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGN,OAAO,CAACO,IAAI,GAAG,qBAAqB,GAAGH,QAAQ,CAAC;IACnF,CAAC,CAAC;EACJ;;AAxBWT,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}